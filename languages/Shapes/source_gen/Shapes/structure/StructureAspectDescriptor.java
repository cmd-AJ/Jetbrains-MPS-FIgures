package Shapes.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCanvas = createDescriptorForCanvas();
  /*package*/ final ConceptDescriptor myConceptCircle = createDescriptorForCircle();
  /*package*/ final ConceptDescriptor myConceptColor = createDescriptorForColor();
  /*package*/ final ConceptDescriptor myConceptColorReference = createDescriptorForColorReference();
  /*package*/ final ConceptDescriptor myConceptShape = createDescriptorForShape();
  /*package*/ final ConceptDescriptor myConceptSquare = createDescriptorForSquare();
  /*package*/ final ConceptDescriptor myConceptTriangle = createDescriptorForTriangle();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.extendedLanguage(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, "jetbrains.mps.execution.util");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCanvas, myConceptCircle, myConceptColor, myConceptColorReference, myConceptShape, myConceptSquare, myConceptTriangle);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Canvas:
        return myConceptCanvas;
      case LanguageConceptSwitch.Circle:
        return myConceptCircle;
      case LanguageConceptSwitch.Color:
        return myConceptColor;
      case LanguageConceptSwitch.ColorReference:
        return myConceptColorReference;
      case LanguageConceptSwitch.Shape:
        return myConceptShape;
      case LanguageConceptSwitch.Square:
        return myConceptSquare;
      case LanguageConceptSwitch.Triangle:
        return myConceptTriangle;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForCanvas() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Canvas", 0x8084195888694529L, 0xa1d779442e93a7e5L, 0x66822a5c8ed6f20cL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:4cb305bb-cc5a-4ea4-a262-1c1b9e74125c(Shapes.structure)/7386512915862843916");
    b.version(3);
    b.aggregate("shapes", 0x66822a5c8ed6f20eL).target(0x8084195888694529L, 0xa1d779442e93a7e5L, 0x66822a5c8ed6f6eaL).optional(true).ordered(true).multiple(true).origin("7386512915862843918").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCircle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Circle", 0x8084195888694529L, 0xa1d779442e93a7e5L, 0x66822a5c8ed6f203L);
    b.class_(false, false, false);
    // extends: Shapes.structure.Shape
    b.super_(0x8084195888694529L, 0xa1d779442e93a7e5L, 0x66822a5c8ed6f6eaL);
    b.origin("r:4cb305bb-cc5a-4ea4-a262-1c1b9e74125c(Shapes.structure)/7386512915862843907");
    b.version(3);
    b.property("x", 0x66822a5c8ed6f204L).type(PrimitiveTypeId.INTEGER).origin("7386512915862843908").done();
    b.property("y", 0x66822a5c8ed6f205L).type(PrimitiveTypeId.INTEGER).origin("7386512915862843909").done();
    b.property("radius", 0x66822a5c8ed6f206L).type(PrimitiveTypeId.INTEGER).origin("7386512915862843910").done();
    b.alias("circle");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForColor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Color", 0x8084195888694529L, 0xa1d779442e93a7e5L, 0x66822a5c8ed7655eL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4cb305bb-cc5a-4ea4-a262-1c1b9e74125c(Shapes.structure)/7386512915862873438");
    b.version(3);
    b.alias("color");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForColorReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "ColorReference", 0x8084195888694529L, 0xa1d779442e93a7e5L, 0x66822a5c8ed7e0adL);
    b.class_(false, false, false);
    b.origin("r:4cb305bb-cc5a-4ea4-a262-1c1b9e74125c(Shapes.structure)/7386512915862905005");
    b.version(3);
    b.associate("target", 0x66822a5c8ed7e0afL).target(0x8084195888694529L, 0xa1d779442e93a7e5L, 0x66822a5c8ed7655eL).optional(false).origin("7386512915862905007").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForShape() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Shape", 0x8084195888694529L, 0xa1d779442e93a7e5L, 0x66822a5c8ed6f6eaL);
    b.class_(false, false, false);
    b.origin("r:4cb305bb-cc5a-4ea4-a262-1c1b9e74125c(Shapes.structure)/7386512915862845162");
    b.version(3);
    b.aggregate("color", 0x66822a5c8ed7e0bbL).target(0x8084195888694529L, 0xa1d779442e93a7e5L, 0x66822a5c8ed7e0adL).optional(false).ordered(true).multiple(false).origin("7386512915862905019").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSquare() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Square", 0x8084195888694529L, 0xa1d779442e93a7e5L, 0x66822a5c8ed6f208L);
    b.class_(false, false, false);
    // extends: Shapes.structure.Shape
    b.super_(0x8084195888694529L, 0xa1d779442e93a7e5L, 0x66822a5c8ed6f6eaL);
    b.origin("r:4cb305bb-cc5a-4ea4-a262-1c1b9e74125c(Shapes.structure)/7386512915862843912");
    b.version(3);
    b.property("upperLeftx", 0x66822a5c8ed6f209L).type(PrimitiveTypeId.INTEGER).origin("7386512915862843913").done();
    b.property("upperlefty", 0x66822a5c8ed6f20aL).type(PrimitiveTypeId.INTEGER).origin("7386512915862843914").done();
    b.property("size", 0x66822a5c8ed6f20bL).type(PrimitiveTypeId.INTEGER).origin("7386512915862843915").done();
    b.alias("square");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTriangle() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Shapes", "Triangle", 0x8084195888694529L, 0xa1d779442e93a7e5L, 0x50b142ada2bf119eL);
    b.class_(false, false, false);
    // extends: Shapes.structure.Shape
    b.super_(0x8084195888694529L, 0xa1d779442e93a7e5L, 0x66822a5c8ed6f6eaL);
    b.origin("r:4cb305bb-cc5a-4ea4-a262-1c1b9e74125c(Shapes.structure)/5814501907439227294");
    b.version(3);
    b.property("ax", 0x50b142ada2bf124cL).type(PrimitiveTypeId.INTEGER).origin("5814501907439227468").done();
    b.property("bx", 0x50b142ada2bf1261L).type(PrimitiveTypeId.INTEGER).origin("5814501907439227489").done();
    b.property("cx", 0x50b142ada2bf1276L).type(PrimitiveTypeId.INTEGER).origin("5814501907439227510").done();
    b.property("ay", 0x50b142ada2bf129fL).type(PrimitiveTypeId.INTEGER).origin("5814501907439227551").done();
    b.property("by", 0x50b142ada2bf12beL).type(PrimitiveTypeId.INTEGER).origin("5814501907439227582").done();
    b.property("cy", 0x50b142ada2bf12e7L).type(PrimitiveTypeId.INTEGER).origin("5814501907439227623").done();
    b.alias("triangle");
    return b.create();
  }
}
